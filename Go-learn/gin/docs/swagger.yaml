basePath: /
definitions:
  main.Task:
    properties:
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple Task API built with Gin.
  title: Task API
  version: "1.0"
paths:
  /createTask:
    post:
      consumes:
      - application/json
      description: Create a new task with the provided data
      parameters:
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/main.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new task
      tags:
      - tasks
  /deleteTask/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Delete a task
      tags:
      - tasks
  /task:
    get:
      consumes:
      - application/json
      description: Get all tasks or filter by status
      parameters:
      - description: Task status to filter by
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Task'
            type: array
      summary: Get all tasks
      tags:
      - tasks
  /task/{id}:
    get:
      consumes:
      - application/json
      description: Get a single task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get a task by ID
      tags:
      - tasks
  /updateTask/{id}:
    put:
      consumes:
      - application/json
      description: Update an existing task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task object
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/main.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.Task'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Update a task
      tags:
      - tasks
swagger: "2.0"
